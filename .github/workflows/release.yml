name: Release

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd web
        npm ci
        
    - name: Build frontend
      run: |
        cd web
        npm run build
        
    - name: Get version from release
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Get git commit hash
      id: get_commit
      run: echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
    - name: Build Linux AMD64 binary
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X paperspace-stable-diffusion-station/internal/version.Version=${{ steps.get_version.outputs.VERSION }} -X paperspace-stable-diffusion-station/internal/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X paperspace-stable-diffusion-station/internal/version.GitCommit=${{ steps.get_commit.outputs.COMMIT }}" -o bin/studio-linux-amd64 ./cmd/server/main.go
        
    - name: Build Linux ARM64 binary
      run: |
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X paperspace-stable-diffusion-station/internal/version.Version=${{ steps.get_version.outputs.VERSION }} -X paperspace-stable-diffusion-station/internal/version.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X paperspace-stable-diffusion-station/internal/version.GitCommit=${{ steps.get_commit.outputs.COMMIT }}" -o bin/studio-linux-arm64 ./cmd/server/main.go
        
    - name: Create release archive
      run: |
        # Create AMD64 archive
        mkdir -p studio
        cp bin/studio-linux-amd64 studio/studio
        cp README.md studio/
        cp LICENSE studio/
        cp env.example studio/
        zip -r paperspace-stable-diffusion-station-linux-amd64.zip studio/
        
        # Create ARM64 archive
        rm -rf studio
        mkdir -p studio
        cp bin/studio-linux-arm64 studio/studio
        cp README.md studio/
        cp LICENSE studio/
        cp env.example studio/
        zip -r paperspace-stable-diffusion-station-linux-arm64.zip studio/
        
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          paperspace-stable-diffusion-station-linux-amd64.zip
          paperspace-stable-diffusion-station-linux-arm64.zip
